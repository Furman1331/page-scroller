{"version":3,"file":"index.cjs.js","sources":["../src/state/state.ts","../src/state/callback.ts","../src/utils/class.enum.ts","../src/common/dom.ts","../src/logger/logger.ts","../src/utils/utils.ts","../src/common/scroll.ts","../src/common/state.ts","../src/common/instance.ts","../src/emitter/events.ts","../src/events/wheel.event.ts","../src/events/keyboard.event.ts","../src/events/touch.event.ts","../src/events/resize.event.ts","../src/events/events.ts","../src/emitter/emitter.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/usePageScroller.ts","../src/shared.ts"],"sourcesContent":["import type { TScrollingMode, ISection } from '@/types'\n\nexport class State {\n\tcontainer: HTMLElement | null = null\n\tsections: ISection[] | null = null\n\n\tactiveSlide: number = 0\n\tactiveSection: number = 0\n\n\tscrollMode: TScrollingMode = 'automatic'\n\tscrollingSpeed: number = 700\n\ttransitionTimingFunction: string = 'ease'\n\n\tisDebug: boolean = false\n\tisScrolling: boolean = false\n\tisResizing: boolean = false\n\tisInitialized: boolean = false\n\n\tisWheelEnabled: boolean = true\n\tisKeyboardEnabled: boolean = true\n\tisTouchEnabled: boolean = true\n\n\tslidesIdentifyAttribute: string = 'page-scroller-slide'\n\tisAllowToScrollThroughSlides: boolean = true\n}\n\nexport const state = new State()\n","import type { ISectionBeforeChangeProps, ISectionChangeProps } from '@/types'\n\nexport class Callback {\n\tonSectionChange: (props: ISectionChangeProps) => unknown\n\tonBeforeSectionChange: (props: ISectionBeforeChangeProps) => unknown\n}\n\nexport const callback = new Callback()\n","export enum ClassName {\n\thtml = 'page-scroller-enabled',\n\tbody = 'page-scoller-body',\n\tcontainer = 'page-scroller-wrapper',\n\tsection = 'page-scroller-section',\n\tsectionWithSlides = 'page-scroller-section-with-slides',\n\tactiveSection = 'page-scroller-section-active',\n\tslide = 'page-scroller-slide',\n}\n\nexport enum SlideClassName {\n\twrapper = 'page-scroller-slide-wrapper',\n\tactive = 'page-scroller-slide-active',\n}\n","import { state } from '../state'\n// import { Section } from '../types'\nimport { ClassName, SlideClassName } from '../utils/class.enum'\n\nexport function initializeDOM() {\n\tconst htmlElement = document.querySelector('html')\n\thtmlElement.classList.add(ClassName.html)\n\n\tconst bodyElement = document.querySelector('body')\n\tbodyElement.classList.add(ClassName.body)\n\n\tstate.container.classList.add(ClassName.container)\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\tstate.container.style.transition = transition\n\n\tprepareSections()\n\n\tstate.scrollMode === 'automatic' ? prepareScrollModeAutomaticDOM() : prepareScrollModeManualDOM()\n}\n\nfunction prepareSections() {\n\tstate.sections = Array.from(state.container.children).map((element) => {\n\t\tconst section = element as HTMLElement\n\n\t\tconst childrens = Array.from(section.children) as HTMLElement[]\n\n\t\tconst foundSlides = childrens.filter((slide) => slide.hasAttribute(state.slidesIdentifyAttribute))\n\t\tfoundSlides.forEach((slide) => slide.classList.add(ClassName.slide))\n\n\t\tif (!foundSlides.length) return { element: section, slides: null }\n\n\t\tconst container = preapreSectionForSlides(section, foundSlides)\n\n\t\tconst slides = { container, elements: foundSlides }\n\n\t\treturn { element: section, slides }\n\t})\n\n\tstate.sections.forEach((section) => section.element.classList.add(ClassName.section))\n}\n\nfunction preapreSectionForSlides(section: HTMLElement, slides: HTMLElement[]): HTMLElement {\n\tconst wrapperElement = document.createElement('div')\n\twrapperElement.classList.add(SlideClassName.wrapper)\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\twrapperElement.style.transition = transition\n\twrapperElement.style.width = `${slides.length * 100}%`\n\n\tslides.forEach((slide) => {\n\t\tslide.style.width = `${100 / slides.length}%`\n\n\t\twrapperElement.appendChild(slide)\n\t})\n\n\tconst containerElement = document.createElement('div')\n\tcontainerElement.classList.add(ClassName.sectionWithSlides)\n\n\tcontainerElement.appendChild(wrapperElement)\n\n\tsection.appendChild(containerElement)\n\n\treturn wrapperElement\n}\n\nexport function destroyDOM() {\n\tconst htmlElement = document.querySelector('html')\n\thtmlElement.classList.remove(ClassName.html)\n\n\tconst bodyElement = document.querySelector('body')\n\tbodyElement.classList.remove(ClassName.body)\n\n\tstate.container.classList.remove(ClassName.container)\n\n\tstate.container.style.transition = ''\n\tstate.container.style.transform = 'none'\n\tstate.container.style.webkitTransform = 'none'\n\n\tstate.sections.forEach((section) => section.element.classList.remove(ClassName.section))\n}\n\nexport function prepareScrollModeAutomaticDOM() {\n\tconst bodyElement = document.querySelector('body')\n\n\tbodyElement.style.overflow = 'hidden'\n\tbodyElement.style.height = '100%'\n\n\tconst htmlElement = document.querySelector('html')\n\n\thtmlElement.style.overflow = 'hidden'\n\thtmlElement.style.height = '100%'\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\tstate.container.style.transition = transition\n}\n\nexport function prepareScrollModeManualDOM() {\n\tconst bodyElement = document.querySelector('body')\n\n\tbodyElement.style.overflow = 'auto'\n\tbodyElement.style.height = 'initial'\n\n\tconst htmlElement = document.querySelector('html')\n\n\thtmlElement.style.overflow = 'auto'\n\thtmlElement.style.height = 'initial'\n\n\tstate.container.style.transition = ''\n\tstate.container.style.transform = 'none'\n\tstate.container.style.webkitTransform = 'none'\n}\n","import { state } from '@/state/state'\n\nimport type { ILogger, TLoggerType } from '@/types/logger'\n\nexport function useLogger(): ILogger {\n\tfunction info(message: string) {\n\t\tif (state.isDebug) console.log(createMessage(message, 'info'))\n\t}\n\n\tfunction error(message: string) {\n\t\tif (state.isDebug) console.error(createMessage(message, 'error'))\n\t}\n\n\tfunction warn(message: string) {\n\t\tif (state.isDebug) console.warn(createMessage(message, 'warn'))\n\t}\n\n\tfunction createMessage(message: string, type?: TLoggerType): string {\n\t\treturn `[Page-Scroller]${type ? `[${type.toUpperCase()}]` : ''}: ${message}`\n\t}\n\n\treturn { info, error, warn, createMessage }\n}\n","export const focusableElementsString = `a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], summary:not([disabled]), [contenteditable]`\n\nexport function closestElement(element: Element, selector: string) {\n\tif (!element || element.nodeType !== 1) return null\n\n\tif (element.matches(selector)) return element\n\n\treturn closestElement(element.parentNode as Element, selector)\n}\n\nexport function isUserUsingInput() {\n\tconst activeElement = document.activeElement\n\n\tconst supportedElements = ['input', 'textarea']\n\n\treturn supportedElements.includes(activeElement.tagName.toLowerCase())\n}\n\nexport function getAverageFromArray(array: number[], number: number) {\n\tconst last = array.slice(Math.max(array.length - number, 0))\n\tconst sum = last.reduce((acc, curr) => acc + curr, 0)\n\n\treturn Math.ceil(sum / number)\n}\n","import { state } from '../state/state'\nimport { ClassName, SlideClassName } from '../utils/class.enum'\n\nimport { EmitterEvents, emitter } from '../emitter'\n\nimport type { TScrollingDirectionVertically, TScrollingDirectionHorizontally } from '@/types'\n\nexport function changeSectionOrSlideByDirection(direction: TScrollingDirectionVertically) {\n\tif (isAllowToChangeSlide(direction)) {\n\t\tchangeSlideByDirection(direction === 'down' ? 'right' : 'left')\n\n\t\treturn\n\t}\n\n\tchangeSectionByDirection(direction)\n}\n\nexport function changeSlideByDirection(direction: TScrollingDirectionHorizontally) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSlideIndex = state.activeSlide\n\n\tstate.activeSlide = direction === 'right' ? currentSlideIndex + 1 : currentSlideIndex - 1\n\n\tchangeSlide(currentSlideIndex, state.activeSlide)\n}\n\nexport function changeSectionByDirection(direction: TScrollingDirectionVertically) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSectionIndex = state.activeSection\n\n\tif (!isAllowToChangeSection(direction)) return (state.isScrolling = false)\n\n\tstate.activeSection = direction === 'down' ? currentSectionIndex + 1 : currentSectionIndex - 1\n\n\tchangeSection(currentSectionIndex, state.activeSection)\n}\n\nexport function changeSectionBySpecificIndex(index: number) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSectionIndex = state.activeSection\n\n\tif (!isAllowToChangeByIndex(index)) return (state.isScrolling = false)\n\n\tstate.sections[currentSectionIndex].element.classList.remove(ClassName.activeSection)\n\n\tstate.activeSection = index\n\n\tchangeSection(currentSectionIndex, state.activeSection)\n}\n\nexport function reAdjustCurrentSection() {\n\tif (state.scrollMode === 'manual') return\n\n\tconst sectionOffset = state.sections[state.activeSection].element.offsetTop\n\n\tconst transform = `translate3d(0px, -${sectionOffset}px, 0px)`\n\n\tstate.container.style.transform = transform\n\tstate.container.style.webkitTransform = transform\n}\n\nexport function changeSection(previousIndex: number, nextIndex: number) {\n\temitter.emit(EmitterEvents.onBeforeSectionChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\n\tstate.sections[previousIndex].element.classList.remove(ClassName.activeSection)\n\n\tconst sectionOffset = state.sections[nextIndex].element.offsetTop\n\n\tconst transform = `translate3d(0px, -${sectionOffset}px, 0px)`\n\n\tstate.container.style.transform = transform\n\tstate.container.style.webkitTransform = transform\n\n\tstate.sections[nextIndex].element.classList.add(ClassName.activeSection)\n\n\tsetTimeout(() => {\n\t\tstate.isScrolling = false\n\n\t\temitter.emit(EmitterEvents.onSectionChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\t}, 700)\n}\n\nexport function changeSlide(previousIndex: number, nextIndex: number) {\n\temitter.emit(EmitterEvents.onBeforeSlideChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\n\tconst activeSection = state.sections[state.activeSection]\n\n\tactiveSection.slides.elements[previousIndex]?.classList.remove(SlideClassName.active)\n\n\tconst slideOffset = activeSection.slides.elements[nextIndex].offsetLeft\n\n\tconst transform = `translate3d(-${slideOffset}px, 0px, 0px)`\n\n\tactiveSection.slides.container.style.transform = transform\n\tactiveSection.slides.container.style.webkitTransform = transform\n\n\tstate.sections[state.activeSection].slides.elements[nextIndex].classList.add(SlideClassName.active)\n\n\tsetTimeout(() => {\n\t\tstate.isScrolling = false\n\n\t\temitter.emit(EmitterEvents.onSlideChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\t}, state.scrollingSpeed)\n}\n\nexport function isAllowToChangeSection(direction: TScrollingDirectionVertically) {\n\treturn direction === 'down' ? state.sections.length != state.activeSection + 1 : state.activeSection - 1 !== -1\n}\n\nexport function isAllowToChangeSlide(direction: TScrollingDirectionVertically): boolean {\n\tif (!state.isAllowToScrollThroughSlides) return false\n\n\tconst isCurrentSectionHasSlides = state.sections[state.activeSection].slides?.elements.length > 0\n\n\tif (!isCurrentSectionHasSlides) return false\n\n\tconst slides = state.sections[state.activeSection].slides\n\n\tconst isEdgeSlide = direction === 'down' ? state.activeSlide + 1 === slides.elements.length : state.activeSlide - 1 === -1\n\n\tif (isEdgeSlide) return false\n\n\treturn true\n}\n\nexport function isAllowToChangeByIndex(index: number) {\n\treturn index >= 0 && index < state.sections.length\n}\n","import { callback, state } from '@/state'\nimport { emitter, EmitterEvents } from '@/emitter'\n\nimport type { IPageScrollerOptions, ISectionChangeProps, ISectionBeforeChangeProps } from '@/types'\n\nexport const defaultState: IPageScrollerOptions = {\n\tscrollMode: 'automatic',\n\tscrollingSpeed: 700,\n\ttransitionTimingFunction: 'ease',\n\n\tslidesIdentifyAttribute: 'page-scroller-slide',\n\tisAllowToScrollThroughSlides: false,\n\n\tisDebug: false,\n\tisWheelEnabled: true,\n\tisKeyboardEnabled: true,\n\tisTouchEnabled: true,\n}\n\nexport function initializeState(options: IPageScrollerOptions) {\n\tstate.scrollMode = options.scrollMode ?? defaultState.scrollMode\n\tstate.scrollingSpeed = options.scrollingSpeed ?? defaultState.scrollingSpeed\n\tstate.transitionTimingFunction = options.transitionTimingFunction ?? defaultState.transitionTimingFunction\n\n\tstate.isDebug = options.isDebug ?? defaultState.isDebug\n\tstate.isWheelEnabled = options.isWheelEnabled ?? defaultState.isWheelEnabled\n\tstate.isKeyboardEnabled = options.isKeyboardEnabled ?? defaultState.isKeyboardEnabled\n\tstate.isTouchEnabled = options.isTouchEnabled ?? defaultState.isTouchEnabled\n\n\tstate.slidesIdentifyAttribute = options.slidesIdentifyAttribute ?? defaultState.slidesIdentifyAttribute\n\tstate.isAllowToScrollThroughSlides = options.isAllowToScrollThroughSlides ?? defaultState.isAllowToScrollThroughSlides\n}\n\nexport function destroyState() {\n\tstate.container = null\n\tstate.sections = null\n\n\tstate.activeSlide = 0\n\tstate.activeSection = 0\n\n\tstate.transitionTimingFunction = defaultState.transitionTimingFunction\n\tstate.scrollingSpeed = defaultState.scrollingSpeed\n\n\tstate.slidesIdentifyAttribute = defaultState.slidesIdentifyAttribute\n\tstate.isAllowToScrollThroughSlides = defaultState.isAllowToScrollThroughSlides\n\n\tstate.isDebug = defaultState.isDebug\n\tstate.isScrolling = false\n\tstate.isInitialized = false\n\n\tstate.isWheelEnabled = defaultState.isWheelEnabled\n\tstate.isKeyboardEnabled = defaultState.isKeyboardEnabled\n\tstate.isTouchEnabled = defaultState.isTouchEnabled\n}\n\nexport function initializeCallbacks(options: IPageScrollerOptions) {\n\tif (options.onSectionChange) {\n\t\tcallback.onSectionChange = options.onSectionChange\n\n\t\temitter.on(EmitterEvents.onSectionChange, (event: ISectionChangeProps) => callback.onSectionChange(event))\n\t}\n\n\tif (options.onBeforeSectionChange) {\n\t\tcallback.onBeforeSectionChange = options.onBeforeSectionChange\n\n\t\temitter.on(EmitterEvents.onBeforeSectionChange, (event: ISectionBeforeChangeProps) =>\n\t\t\tcallback.onBeforeSectionChange(event)\n\t\t)\n\t}\n}\n\nexport function destroyCallbacks() {\n\tcallback.onSectionChange = () => {}\n\temitter.off(EmitterEvents.onSectionChange)\n\tcallback.onBeforeSectionChange = () => {}\n\temitter.off(EmitterEvents.onBeforeSectionChange)\n}\n","import { state } from '../state'\n\nimport { registerEmitterEvents, destroyEmitterEvents } from '../emitter'\n\nimport { useLogger } from '../logger'\nimport { initializeDOM, destroyDOM } from './dom'\nimport { destroyEvents, registerEvents } from '../events'\nimport { initializeCallbacks, initializeState, destroyState, destroyCallbacks } from './state'\n\nimport type { IPageScrollerOptions } from '@/types'\n\nconst logger = useLogger()\n\nexport function onInitialize(options?: IPageScrollerOptions) {\n\tlogger.info('Initializing Page Scroller...')\n\n\tif (options) {\n\t\tinitializeState(options)\n\t\tinitializeCallbacks(options)\n\t}\n\n\tinitializeDOM()\n\tregisterEvents()\n\tregisterEmitterEvents()\n\n\tstate.isInitialized = true\n\tlogger.info('Initialized Page Scroller.')\n}\n\nexport function onDestroy() {\n\tlogger.warn('Destroying Page Scroller...')\n\n\tdestroyDOM()\n\tdestroyEvents()\n\tdestroyEmitterEvents()\n\tdestroyState()\n\tdestroyCallbacks()\n\n\tstate.isInitialized = false\n\n\tlogger.warn('Destroyed Page Scroller.')\n}\n","import { prepareScrollModeAutomaticDOM, prepareScrollModeManualDOM } from \"../common/dom\";\nimport { destroyEvents, registerEvents } from \"../events\";\n\nimport { emitter, EmitterEvents } from \"./emitter\";\n\nexport function registerEmitterEvents() {\n    emitter.on(EmitterEvents.onPageScrollModeAutomatic, () => {\n        prepareScrollModeAutomaticDOM();\n        registerEvents();\n    })\n\n    emitter.on(EmitterEvents.onPageScrollModeManual, () => {\n        prepareScrollModeManualDOM();\n        destroyEvents();\n    })\n}\n\nexport function destroyEmitterEvents() {\n    emitter.off(EmitterEvents.onPageScrollModeManual);\n    emitter.off(EmitterEvents.onPageScrollModeAutomatic);\n}","import { useLogger } from '@/logger'\nimport { getAverageFromArray } from '@/utils'\nimport { changeSectionOrSlideByDirection } from '@/common'\n\nimport type { TScrollingDirectionVertically } from '@/types'\n\nlet scrollingTimeout\nexport let scrollings = []\n\nconst logger = useLogger()\n\n/**\n * Registers the wheel event listener on the document body.\n */\nexport function registerWheelEvent() {\n\tlogger.info('Wheel event registered')\n\n\tdocument.body.addEventListener('wheel', wheelEventHandler)\n}\n\n/**\n * Removes the wheel event listener from the document body.\n */\nexport function destroyWheelEvent() {\n\tlogger.info('Wheel event registered')\n\n\tdocument.body.removeEventListener('wheel', wheelEventHandler)\n}\n\nexport function wheelEventHandler(event: WheelEvent) {\n\tlogger.info('Wheel event detected')\n\n\tclearTimeout(scrollingTimeout)\n\n\tscrollingTimeout = setTimeout(() => {\n\t\tscrollings = []\n\t}, 200)\n\n\tconst scrollValue = -event.deltaY || event.detail\n\tconst direction = getScrollDirection(scrollValue)\n\n\tif (scrollings.length > 100) {\n\t\tscrollings.shift()\n\t}\n\n\tscrollings.push(Math.abs(scrollValue))\n\n\tif (!checkIsAccelerating()) return\n\n\treturn changeSectionOrSlideByDirection(direction)\n}\n\nfunction checkIsAccelerating() {\n\tconst avarageFromEnd = getAverageFromArray(scrollings, 5)\n\tconst avarageFromMid = getAverageFromArray(scrollings, 50)\n\n\treturn avarageFromEnd >= avarageFromMid\n}\n\n/**\n * Determines the scroll direction based on the WheelEvent.\n * @param event - The WheelEvent object.\n * @returns The scroll direction, either \"up\" or \"down\".\n */\nfunction getScrollDirection(value: number): TScrollingDirectionVertically {\n\tconst delta = Math.max(-1, Math.min(1, value))\n\n\treturn delta < 0 ? 'down' : 'up'\n}\n","import { useLogger } from '@/logger'\nimport { state } from '@/state/state'\nimport { EmitterEvents, emitter } from '@/emitter'\nimport { focusableElementsString, isUserUsingInput } from '@/utils'\nimport { changeSectionOrSlideByDirection, changeSectionBySpecificIndex, changeSlideByDirection } from '@/common'\n\nimport type { TSupportedKeyboardKeys } from '@/types'\n\ntype FocusElementCollation = 'first' | 'last'\n\nconst logger = useLogger()\n\nlet focusElementCollation: FocusElementCollation = null\n\n/**\n * Registers the keyboard event listeners for keyup and keydown events.\n */\nexport function registerKeyboardEvents(): void {\n\tdocument.addEventListener('keydown', keyDownEventHandler)\n\n\temitter.on(EmitterEvents.onSectionChange, onSectionChangeHandler)\n}\n\n/**\n * Removes the keyboard event listeners for keyup and keydown events.\n */\nexport function destroyKeyboardEvents(): void {\n\tdocument.removeEventListener('keydown', keyDownEventHandler)\n\n\temitter.off(EmitterEvents.onSectionChange)\n}\n\n/**\n * Hanldes the keydown event and changes the section based on the key pressed.\n * @param event KeyboardEvent - The keyboard event.\n * @returns void\n */\nfunction keyDownEventHandler(event: KeyboardEvent): void {\n\tlogger.info('Keydown event detected')\n\tconst key = event.key as TSupportedKeyboardKeys\n\n\tif (isUserUsingInput()) return\n\n\tswitch (key) {\n\t\tcase ' ':\n\t\tcase 'ArrowDown':\n\t\tcase 'PageDown':\n\t\t\tchangeSectionOrSlideByDirection('down')\n\t\t\tbreak\n\t\tcase 'ArrowUp':\n\t\tcase 'PageUp':\n\t\t\tchangeSectionOrSlideByDirection('up')\n\t\t\tbreak\n\t\tcase 'ArrowRight':\n\t\t\tchangeSlideByDirection('right')\n\t\tcase 'ArrowLeft':\n\t\t\tchangeSlideByDirection('left')\n\t\tcase 'End':\n\t\t\tchangeSectionBySpecificIndex(state.sections.length - 1)\n\t\t\tbreak\n\t\tcase 'Home':\n\t\t\tchangeSectionBySpecificIndex(0)\n\t\t\tbreak\n\t\tcase 'Tab':\n\t\t\tonTabPress(event)\n\t\t\tbreak\n\t}\n}\n\n/**\n * Make sure that the tab key will only focus elements within the current section.\n * Prevent page break when the tab key is pressed.\n * @param event - The keyboard event.\n */\nexport function onTabPress(event: KeyboardEvent) {\n\tconst isShiftPressed = event.shiftKey\n\tconst activeElement = document.activeElement\n\tconst focusableElements = getFocusableElements(state.sections[state.activeSection].element)\n\n\tconst isFirstFocusableInSection = activeElement === focusableElements[0]\n\tconst isLastFocusableInSection = activeElement === focusableElements[focusableElements.length - 1]\n\n\tconst shouldChangeSection = (isShiftPressed && isFirstFocusableInSection) || (!isShiftPressed && isLastFocusableInSection)\n\n\tif (shouldChangeSection) {\n\t\tevent.preventDefault()\n\n\t\tconst direction = isShiftPressed && isFirstFocusableInSection ? 'up' : 'down'\n\n\t\tfocusElementCollation = direction === 'up' ? 'last' : 'first'\n\n\t\tchangeSectionOrSlideByDirection(direction)\n\t}\n}\n\n/**\n * Focuses the first or last focusable element within the current section while changing the section by tag key\n */\nfunction onSectionChangeHandler() {\n\tif (!focusElementCollation) return\n\n\tconst focusableElements = getFocusableElements(state.sections[state.activeSection].element)\n\n\tfocusableElements[focusElementCollation === 'first' ? 0 : focusableElements.length - 1].focus()\n\n\tfocusElementCollation = null\n}\n\nfunction getFocusableElements(parent: HTMLElement) {\n\treturn [].slice\n\t\t.call(parent.querySelectorAll(focusableElementsString))\n\t\t.filter((element) => element.getAttribute('tabindex') !== '-1' && element.offsetParent !== null)\n}\n","import { useLogger } from '@/logger'\nimport { state } from '@/state/state'\n\nimport { changeSectionOrSlideByDirection } from '@/common'\n\nimport type { ICoordinates } from '@/types/event'\n\nconst logger = useLogger()\n\nexport function registerTouchEvents(): void {\n\tdocument.addEventListener('touchstart', onTouchStartHandler)\n\tstate.container.addEventListener('touchmove', onTouchMoveHandler, { passive: false })\n}\n\nexport function destroyTouchEvents(): void {\n\tdocument.removeEventListener('touchstart', onTouchStartHandler)\n\tstate.container.removeEventListener('touchmove', onTouchMoveHandler)\n}\n\nexport let touchStartCoordinates: ICoordinates = {}\nexport function onTouchStartHandler(event: TouchEvent): void {\n\tconst coordinates = getEventCoordinated(event)\n\n\ttouchStartCoordinates = {\n\t\tx: coordinates.x,\n\t\ty: coordinates.y,\n\t}\n}\n\nexport function onTouchMoveHandler(event: TouchEvent): void {\n\tlogger.info('Touch move event detected')\n\n\tconst coordinates = getEventCoordinated(event)\n\tconst isVerticalMovementEnought = Math.abs(coordinates.y - touchStartCoordinates.y) > (window.innerHeight / 100) * 5\n\n\tconst direction = touchStartCoordinates.y > coordinates.y ? 'down' : 'up'\n\n\tif (isVerticalMovementEnought) changeSectionOrSlideByDirection(direction)\n}\n\nexport function getEventCoordinated(event: TouchEvent): ICoordinates {\n\treturn {\n\t\tx: event.touches[0].pageX,\n\t\ty: event.touches[0].pageY,\n\t}\n}\n","import { state } from '../state'\nimport { useLogger } from '../logger'\nimport { reAdjustCurrentSection } from '../common'\n\nconst logger = useLogger()\n\nlet timeout\nlet isResizing = false\n\nexport function registerResizeEvents() {\n\tonResizeHandler()\n\n\twindow.addEventListener('resize', onResizeHandler)\n}\n\nexport function destroyResizeEvents() {\n\tresizeHandler()\n\n\tclearTimeout(timeout)\n\n\twindow.removeEventListener('resize', onResizeHandler)\n}\n\nfunction onResizeHandler() {\n\tlogger.info('Resize event has been triggered.')\n\tif (!isResizing) {\n\t\tresizeHandler()\n\t}\n\n\tisResizing = true\n\n\tclearTimeout(timeout)\n\ttimeout = setTimeout(() => {\n\t\tresizeAction()\n\n\t\tisResizing = false\n\t}, 400)\n}\n\nfunction resizeAction() {\n\tstate.isResizing = true\n\n\tresizeHandler()\n\n\treAdjustCurrentSection()\n}\n\nfunction resizeHandler() {\n\tconst height = window ? window.innerHeight : document.documentElement.offsetHeight\n\n\tsetSectionsSize(height)\n}\n\nfunction setSectionsSize(height: number) {\n\tstate.sections.forEach((section) => (section.element.style.height = `${height}px`))\n}\n","import { state } from \"../state/state\";\n\nimport { destroyWheelEvent, registerWheelEvent } from \"./wheel.event\";\nimport { destroyKeyboardEvents, registerKeyboardEvents } from \"./keyboard.event\";\nimport { destroyTouchEvents, registerTouchEvents } from \"./touch.event\";\nimport { destroyResizeEvents, registerResizeEvents } from \"./resize.event\";\n\n/**\n * Registers the events for the page scroller.\n */\nexport function registerEvents() {\n    if(state.scrollMode === \"manual\") return;\n\n    state.isWheelEnabled && registerWheelEvent();\n    state.isKeyboardEnabled && registerKeyboardEvents();\n    state.isTouchEnabled && registerTouchEvents();\n\n    registerResizeEvents();\n}\n\n/**\n * Destroys the events for the page scroller.\n */\nexport function destroyEvents() {\n    destroyKeyboardEvents();\n    destroyWheelEvent();\n    destroyTouchEvents();\n    destroyResizeEvents();\n}","import type {\n\tIEmitter,\n\tIEventHandlerMap,\n\tTEmitterEventType,\n\tTEmitterEventHandler,\n\tTEmitterEventWildcardHandler,\n\tTEmitterHandlerList,\n\tTEmitterWildcardHandlerList,\n} from '@/types/emitter'\n\nexport enum EmitterEvents {\n\tonSectionChange = 'onSectionChange',\n\tonBeforeSectionChange = 'onBeforeSectionChange',\n\n\tonSlideChange = 'onSlideChange',\n\tonBeforeSlideChange = 'onBeforeSlideChange',\n\n\tonPageScrollStatusChanged = 'onPageScrollStatusChanged',\n\tonPageScrollModeAutomatic = 'onPageScrollModeAutomatic',\n\tonPageScrollModeManual = 'onPageScrollModeManual',\n}\n\nfunction mitt<Events extends Record<TEmitterEventType, unknown>>(all?: IEventHandlerMap<Events>): IEmitter<Events> {\n\ttype GenericEventHandler = TEmitterEventHandler<Events[keyof Events]> | TEmitterEventWildcardHandler<Events>\n\tall = all || new Map()\n\n\treturn {\n\t\tall,\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler)\n\t\t\t} else {\n\t\t\t\tall!.set(type, [handler] as TEmitterHandlerList<Events[keyof Events]>)\n\t\t\t}\n\t\t},\n\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1)\n\t\t\t\t} else {\n\t\t\t\t\tall!.set(type, [])\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\t;(handlers as TEmitterHandlerList<Events[keyof Events]>).slice().map((handler) => {\n\t\t\t\t\thandler(evt!)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thandlers = all!.get('*')\n\t\t\tif (handlers) {\n\t\t\t\t;(handlers as TEmitterWildcardHandlerList<Events>).slice().map((handler) => {\n\t\t\t\t\thandler(type, evt!)\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t}\n}\n\nexport const emitter = mitt()\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { useLogger } from './logger'\nimport { state } from './state/state'\nimport { changeSectionBySpecificIndex, changeSectionByDirection, onInitialize } from './common'\n\nimport type { IPageScrollerOptions, IPageScrollerReturn } from '@/types'\n\nimport './index.css'\n\nconst logger = useLogger()\n\nexport function usePageScroller(options?: IPageScrollerOptions): IPageScrollerReturn {\n\tfunction initPageScroller(selector: string) {\n\t\tlogger.info('Initializing page scroller...')\n\n\t\tif (state.isInitialized) throw new Error(logger.createMessage('Page scroller is already initialized.'))\n\n\t\tif (selector === undefined) throw new Error(logger.createMessage('Please provide a valid selector.'))\n\n\t\tstate.container = document.querySelector(selector)\n\n\t\tif (!state.container) throw new Error(logger.createMessage('Container not found. Please provide a valid selector.'))\n\n\t\tonInitialize(options)\n\t}\n\n\treturn { initPageScroller, changeSectionByDirection, changeSectionBySpecificIndex }\n}\n","import { state } from '@/state'\nimport { emitter, EmitterEvents } from '@/emitter'\n\nexport {\n\tonDestroy,\n\tchangeSectionOrSlideByDirection,\n\tchangeSectionByDirection,\n\tchangeSectionBySpecificIndex,\n\tchangeSlideByDirection,\n} from '@/common'\n\nimport type { TScrollingMode } from '@/types/scroll'\n\nexport const isManualScrollingMode = (): boolean => state.scrollMode === 'manual'\nexport const isAutomaticScrollingMode = (): boolean => state.scrollMode === 'automatic'\n\nexport function changeScrollingMode(mode: TScrollingMode) {\n\tif (state.scrollMode === mode) return\n\n\tstate.scrollMode = mode\n\n\temitter.emit(mode === 'automatic' ? EmitterEvents.onPageScrollModeAutomatic : EmitterEvents.onPageScrollModeManual)\n}\n\nexport const getActiveSection = (): number => state.activeSection\n"],"names":["state","container","sections","activeSlide","activeSection","scrollMode","scrollingSpeed","transitionTimingFunction","isDebug","isScrolling","isResizing","isInitialized","isWheelEnabled","isKeyboardEnabled","isTouchEnabled","slidesIdentifyAttribute","isAllowToScrollThroughSlides","callback","onSectionChange","onBeforeSectionChange","ClassName","SlideClassName","initializeDOM","document","querySelector","classList","add","html","body","transition","style","Array","from","children","map","element","section","foundSlides","filter","slide","hasAttribute","forEach","length","slides","wrapperElement","createElement","wrapper","width","appendChild","containerElement","sectionWithSlides","preapreSectionForSlides","elements","prepareScrollModeAutomaticDOM","prepareScrollModeManualDOM","bodyElement","overflow","height","htmlElement","transform","webkitTransform","useLogger","info","message","error","warn","createMessage","type","toUpperCase","getAverageFromArray","array","number","sum","slice","Math","max","reduce","acc","curr","ceil","changeSectionOrSlideByDirection","direction","isEdgeSlide","isAllowToChangeSlide","changeSectionByDirection","changeSlideByDirection","currentSlideIndex","previousIndex","nextIndex","emitter","emit","EmitterEvents","onBeforeSlideChange","beforeIndex","afterIndex","remove","active","offsetLeft","setTimeout","onSlideChange","changeSlide","currentSectionIndex","isAllowToChangeSection","changeSection","changeSectionBySpecificIndex","index","isAllowToChangeByIndex","offsetTop","defaultState","logger","onInitialize","options","initializeState","on","event","initializeCallbacks","registerEvents","onPageScrollModeAutomatic","onPageScrollModeManual","destroyEvents","scrollingTimeout","scrollings","wheelEventHandler","clearTimeout","scrollValue","deltaY","detail","value","min","shift","push","abs","avarageFromEnd","avarageFromMid","checkIsAccelerating","focusElementCollation","keyDownEventHandler","key","activeElement","includes","tagName","toLowerCase","isUserUsingInput","isShiftPressed","shiftKey","focusableElements","getFocusableElements","isFirstFocusableInSection","isLastFocusableInSection","preventDefault","onTabPress","onSectionChangeHandler","focus","parent","call","querySelectorAll","getAttribute","offsetParent","touchStartCoordinates","onTouchStartHandler","coordinates","getEventCoordinated","x","y","onTouchMoveHandler","isVerticalMovementEnought","window","innerHeight","touches","pageX","pageY","timeout","onResizeHandler","resizeHandler","reAdjustCurrentSection","setSectionsSize","documentElement","offsetHeight","addEventListener","passive","removeEventListener","off","all","Map","handler","handlers","get","set","splice","indexOf","evt","css","ref","insertAt","head","getElementsByTagName","firstChild","insertBefore","styleSheet","cssText","createTextNode","mode","initPageScroller","selector","Error","undefined"],"mappings":"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"}