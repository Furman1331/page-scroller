{"version":3,"file":"index.cjs.js","sources":["../src/state/state.ts","../src/state/callback.ts","../src/logger/logger.ts","../src/utils/class.enum.ts","../src/common/scroll.ts","../src/utils/utils.ts","../src/events/wheel.event.ts","../src/events/keyboard.event.ts","../src/events/touch.event.ts","../src/events/events.ts","../src/events/resize.event.ts","../src/common/state.ts","../src/common/instance.ts","../src/common/dom.ts","../src/emitter/events.ts","../src/emitter/emitter.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/usePageScroller.ts","../src/shared.ts"],"sourcesContent":["import type { TScrollingMode, ISection } from '@/types'\n\nexport class State {\n\tcontainer: HTMLElement | null = null\n\tsections: ISection[] | null = null\n\n\tactiveSlide: number = 0\n\tactiveSection: number = 0\n\n\tscrollMode: TScrollingMode = 'automatic'\n\tscrollingSpeed: number = 700\n\ttransitionTimingFunction: string = 'ease'\n\n\tisDebug: boolean = false\n\tisScrolling: boolean = false\n\tisResizing: boolean = false\n\tisInitialized: boolean = false\n\n\tisWheelEnabled: boolean = true\n\tisKeyboardEnabled: boolean = true\n\tisTouchEnabled: boolean = true\n\n\tslidesIdentifyAttribute: string = 'page-scroller-slide'\n\tisAllowToScrollThroughSlides: boolean = true\n}\n\nexport const state = new State()\n","import type { ISectionBeforeChangeProps, ISectionChangeProps } from '@/types'\n\nexport class Callback {\n\tonSectionChange: (props: ISectionChangeProps) => unknown\n\tonBeforeSectionChange: (props: ISectionBeforeChangeProps) => unknown\n}\n\nexport const callback = new Callback()\n","import { state } from '@/state/state'\n\nimport type { ILogger, TLoggerType } from '@/types/logger'\n\nexport function useLogger(): ILogger {\n\tfunction info(message: string) {\n\t\tif (state.isDebug) console.log(createMessage(message, 'info'))\n\t}\n\n\tfunction error(message: string) {\n\t\tif (state.isDebug) console.error(createMessage(message, 'error'))\n\t}\n\n\tfunction warn(message: string) {\n\t\tif (state.isDebug) console.warn(createMessage(message, 'warn'))\n\t}\n\n\tfunction createMessage(message: string, type?: TLoggerType): string {\n\t\treturn `[Page-Scroller]${type ? `[${type.toUpperCase()}]` : ''}: ${message}`\n\t}\n\n\treturn { info, error, warn, createMessage }\n}\n","export enum ClassName {\n\thtml = 'page-scroller-enabled',\n\tbody = 'page-scoller-body',\n\tcontainer = 'page-scroller-wrapper',\n\tsection = 'page-scroller-section',\n\tsectionWithSlides = 'page-scroller-section-with-slides',\n\tactiveSection = 'page-scroller-section-active',\n\tslide = 'page-scroller-slide',\n}\n\nexport enum SlideClassName {\n\twrapper = 'page-scroller-slide-wrapper',\n\twrapperDestroyed = 'page-scroller-slide-wrapper-destroyed',\n\tactive = 'page-scroller-slide-active',\n}\n","import { state } from '../state/state'\nimport { ClassName, SlideClassName } from '../utils/class.enum'\n\nimport { EmitterEvents, emitter } from '../emitter'\n\nimport type { TScrollingDirectionVertically, TScrollingDirectionHorizontally } from '@/types'\n\nexport function changeSectionOrSlideByDirection(direction: TScrollingDirectionVertically) {\n\tif (isAllowToChangeSlide(direction)) {\n\t\tchangeSlideByDirection(direction === 'down' ? 'right' : 'left')\n\n\t\treturn\n\t}\n\n\tchangeSectionByDirection(direction)\n}\n\nexport function changeSlideByDirection(direction: TScrollingDirectionHorizontally) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSlideIndex = state.activeSlide\n\n\tstate.activeSlide = direction === 'right' ? currentSlideIndex + 1 : currentSlideIndex - 1\n\n\tchangeSlide(currentSlideIndex, state.activeSlide)\n}\n\nexport function changeSectionByDirection(direction: TScrollingDirectionVertically) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSectionIndex = state.activeSection\n\n\tif (!isAllowToChangeSection(direction)) return (state.isScrolling = false)\n\n\tstate.activeSection = direction === 'down' ? currentSectionIndex + 1 : currentSectionIndex - 1\n\n\tchangeSection(currentSectionIndex, state.activeSection)\n}\n\nexport function changeSectionBySpecificIndex(index: number) {\n\tif (state.isScrolling) return\n\n\tstate.isScrolling = true\n\n\tconst currentSectionIndex = state.activeSection\n\n\tif (!isAllowToChangeByIndex(index)) return (state.isScrolling = false)\n\n\tstate.sections[currentSectionIndex].element.classList.remove(ClassName.activeSection)\n\n\tstate.activeSection = index\n\n\tchangeSection(currentSectionIndex, state.activeSection)\n}\n\nexport function reAdjustCurrentSection() {\n\tif (state.scrollMode === 'manual') return\n\n\tconst sectionOffset = state.sections[state.activeSection].element.offsetTop\n\n\tconst transform = `translate3d(0px, -${sectionOffset}px, 0px)`\n\n\tstate.container.style.transform = transform\n\tstate.container.style.webkitTransform = transform\n}\n\nexport function changeSection(previousIndex: number, nextIndex: number) {\n\temitter.emit(EmitterEvents.onBeforeSectionChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\n\tstate.sections[previousIndex].element.classList.remove(ClassName.activeSection)\n\n\tconst sectionOffset = state.sections[nextIndex].element.offsetTop\n\n\tconst transform = `translate3d(0px, -${sectionOffset}px, 0px)`\n\n\tstate.container.style.transform = transform\n\tstate.container.style.webkitTransform = transform\n\n\tstate.sections[nextIndex].element.classList.add(ClassName.activeSection)\n\n\tsetTimeout(() => {\n\t\tstate.isScrolling = false\n\n\t\temitter.emit(EmitterEvents.onSectionChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\t}, 700)\n}\n\nexport function changeSlide(previousIndex: number, nextIndex: number) {\n\temitter.emit(EmitterEvents.onBeforeSlideChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\n\tconst activeSection = state.sections[state.activeSection]\n\n\tactiveSection.slides.elements[previousIndex]?.classList.remove(SlideClassName.active)\n\n\tconst slideOffset = activeSection.slides.elements[nextIndex].offsetLeft\n\n\tconst transform = `translate3d(-${slideOffset}px, 0px, 0px)`\n\n\tactiveSection.slides.container.style.transform = transform\n\tactiveSection.slides.container.style.webkitTransform = transform\n\n\tstate.sections[state.activeSection].slides.elements[nextIndex].classList.add(SlideClassName.active)\n\n\tsetTimeout(() => {\n\t\tstate.isScrolling = false\n\n\t\temitter.emit(EmitterEvents.onSlideChange, { beforeIndex: previousIndex, afterIndex: nextIndex })\n\t}, state.scrollingSpeed)\n}\n\nexport function isAllowToChangeSection(direction: TScrollingDirectionVertically) {\n\treturn direction === 'down' ? state.sections.length != state.activeSection + 1 : state.activeSection - 1 !== -1\n}\n\nexport function isAllowToChangeSlide(direction: TScrollingDirectionVertically): boolean {\n\tif (!state.isAllowToScrollThroughSlides) return false\n\n\tconst isCurrentSectionHasSlides = state.sections[state.activeSection].slides?.elements.length > 0\n\n\tif (!isCurrentSectionHasSlides) return false\n\n\tconst slides = state.sections[state.activeSection].slides\n\n\tconst isEdgeSlide = direction === 'down' ? state.activeSlide + 1 === slides.elements.length : state.activeSlide - 1 === -1\n\n\tif (isEdgeSlide) return false\n\n\treturn true\n}\n\nexport function isAllowToChangeByIndex(index: number) {\n\treturn index >= 0 && index < state.sections.length\n}\n","export const focusableElementsString = `a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], summary:not([disabled]), [contenteditable]`\n\nexport function closestElement(element: Element, selector: string) {\n\tif (!element || element.nodeType !== 1) return null\n\n\tif (element.matches(selector)) return element\n\n\treturn closestElement(element.parentNode as Element, selector)\n}\n\nexport function isUserUsingInput() {\n\tconst activeElement = document.activeElement\n\n\tconst supportedElements = ['input', 'textarea']\n\n\treturn supportedElements.includes(activeElement.tagName.toLowerCase())\n}\n\nexport function getAverageFromArray(array: number[], number: number) {\n\tconst last = array.slice(Math.max(array.length - number, 0))\n\tconst sum = last.reduce((acc, curr) => acc + curr, 0)\n\n\treturn Math.ceil(sum / number)\n}\n","import { useLogger } from '@/logger'\nimport { getAverageFromArray } from '@/utils'\nimport { changeSectionOrSlideByDirection } from '@/common'\n\nimport type { TScrollingDirectionVertically } from '@/types'\n\nlet scrollingTimeout\nexport let scrollings = []\n\nconst logger = useLogger()\n\n/**\n * Registers the wheel event listener on the document body.\n */\nexport function registerWheelEvent() {\n\tlogger.info('Wheel event registered')\n\n\tdocument.body.addEventListener('wheel', wheelEventHandler)\n}\n\n/**\n * Removes the wheel event listener from the document body.\n */\nexport function destroyWheelEvent() {\n\tlogger.info('Wheel event registered')\n\n\tdocument.body.removeEventListener('wheel', wheelEventHandler)\n}\n\nexport function wheelEventHandler(event: WheelEvent) {\n\tlogger.info('Wheel event detected')\n\n\tclearTimeout(scrollingTimeout)\n\n\tscrollingTimeout = setTimeout(() => {\n\t\tscrollings = []\n\t}, 200)\n\n\tconst scrollValue = -event.deltaY || event.detail\n\tconst direction = getScrollDirection(scrollValue)\n\n\tif (scrollings.length > 100) {\n\t\tscrollings.shift()\n\t}\n\n\tscrollings.push(Math.abs(scrollValue))\n\n\tif (!checkIsAccelerating()) return\n\n\treturn changeSectionOrSlideByDirection(direction)\n}\n\nfunction checkIsAccelerating() {\n\tconst avarageFromEnd = getAverageFromArray(scrollings, 5)\n\tconst avarageFromMid = getAverageFromArray(scrollings, 50)\n\n\treturn avarageFromEnd >= avarageFromMid\n}\n\n/**\n * Determines the scroll direction based on the WheelEvent.\n * @param event - The WheelEvent object.\n * @returns The scroll direction, either \"up\" or \"down\".\n */\nfunction getScrollDirection(value: number): TScrollingDirectionVertically {\n\tconst delta = Math.max(-1, Math.min(1, value))\n\n\treturn delta < 0 ? 'down' : 'up'\n}\n","import { useLogger } from '@/logger'\nimport { state } from '@/state/state'\nimport { EmitterEvents, emitter } from '@/emitter'\nimport { focusableElementsString, isUserUsingInput } from '@/utils'\nimport { changeSectionOrSlideByDirection, changeSectionBySpecificIndex, changeSlideByDirection } from '@/common'\n\nimport type { TSupportedKeyboardKeys } from '@/types'\n\ntype FocusElementCollation = 'first' | 'last'\n\nconst logger = useLogger()\n\nlet focusElementCollation: FocusElementCollation = null\n\n/**\n * Registers the keyboard event listeners for keyup and keydown events.\n */\nexport function registerKeyboardEvents(): void {\n\tdocument.addEventListener('keydown', keyDownEventHandler)\n\n\temitter.on(EmitterEvents.onSectionChange, onSectionChangeHandler)\n}\n\n/**\n * Removes the keyboard event listeners for keyup and keydown events.\n */\nexport function destroyKeyboardEvents(): void {\n\tdocument.removeEventListener('keydown', keyDownEventHandler)\n\n\temitter.off(EmitterEvents.onSectionChange)\n}\n\n/**\n * Hanldes the keydown event and changes the section based on the key pressed.\n * @param event KeyboardEvent - The keyboard event.\n * @returns void\n */\nfunction keyDownEventHandler(event: KeyboardEvent): void {\n\tlogger.info('Keydown event detected')\n\tconst key = event.key as TSupportedKeyboardKeys\n\n\tif (isUserUsingInput()) return\n\n\tswitch (key) {\n\t\tcase ' ':\n\t\tcase 'ArrowDown':\n\t\tcase 'PageDown':\n\t\t\tchangeSectionOrSlideByDirection('down')\n\t\t\tbreak\n\t\tcase 'ArrowUp':\n\t\tcase 'PageUp':\n\t\t\tchangeSectionOrSlideByDirection('up')\n\t\t\tbreak\n\t\tcase 'ArrowRight':\n\t\t\tchangeSlideByDirection('right')\n\t\tcase 'ArrowLeft':\n\t\t\tchangeSlideByDirection('left')\n\t\tcase 'End':\n\t\t\tchangeSectionBySpecificIndex(state.sections.length - 1)\n\t\t\tbreak\n\t\tcase 'Home':\n\t\t\tchangeSectionBySpecificIndex(0)\n\t\t\tbreak\n\t\tcase 'Tab':\n\t\t\tonTabPress(event)\n\t\t\tbreak\n\t}\n}\n\n/**\n * Make sure that the tab key will only focus elements within the current section.\n * Prevent page break when the tab key is pressed.\n * @param event - The keyboard event.\n */\nexport function onTabPress(event: KeyboardEvent) {\n\tconst isShiftPressed = event.shiftKey\n\tconst activeElement = document.activeElement\n\tconst focusableElements = getFocusableElements(state.sections[state.activeSection].element)\n\n\tconst isFirstFocusableInSection = activeElement === focusableElements[0]\n\tconst isLastFocusableInSection = activeElement === focusableElements[focusableElements.length - 1]\n\n\tconst shouldChangeSection = (isShiftPressed && isFirstFocusableInSection) || (!isShiftPressed && isLastFocusableInSection)\n\n\tif (shouldChangeSection) {\n\t\tevent.preventDefault()\n\n\t\tconst direction = isShiftPressed && isFirstFocusableInSection ? 'up' : 'down'\n\n\t\tfocusElementCollation = direction === 'up' ? 'last' : 'first'\n\n\t\tchangeSectionOrSlideByDirection(direction)\n\t}\n}\n\n/**\n * Focuses the first or last focusable element within the current section while changing the section by tag key\n */\nfunction onSectionChangeHandler() {\n\tif (!focusElementCollation) return\n\n\tconst focusableElements = getFocusableElements(state.sections[state.activeSection].element)\n\n\tfocusableElements[focusElementCollation === 'first' ? 0 : focusableElements.length - 1].focus()\n\n\tfocusElementCollation = null\n}\n\nfunction getFocusableElements(parent: HTMLElement) {\n\treturn [].slice\n\t\t.call(parent.querySelectorAll(focusableElementsString))\n\t\t.filter((element) => element.getAttribute('tabindex') !== '-1' && element.offsetParent !== null)\n}\n","import { useLogger } from '@/logger'\nimport { state } from '@/state/state'\n\nimport { changeSectionOrSlideByDirection } from '@/common'\n\nimport type { ICoordinates } from '@/types/event'\n\nconst logger = useLogger()\n\nexport function registerTouchEvents(): void {\n\tdocument.addEventListener('touchstart', onTouchStartHandler)\n\tstate.container.addEventListener('touchmove', onTouchMoveHandler, { passive: false })\n}\n\nexport function destroyTouchEvents(): void {\n\tdocument.removeEventListener('touchstart', onTouchStartHandler)\n\tstate.container.removeEventListener('touchmove', onTouchMoveHandler)\n}\n\nexport let touchStartCoordinates: ICoordinates = {}\nexport function onTouchStartHandler(event: TouchEvent): void {\n\tconst coordinates = getEventCoordinated(event)\n\n\ttouchStartCoordinates = {\n\t\tx: coordinates.x,\n\t\ty: coordinates.y,\n\t}\n}\n\nexport function onTouchMoveHandler(event: TouchEvent): void {\n\tlogger.info('Touch move event detected')\n\n\tconst coordinates = getEventCoordinated(event)\n\tconst isVerticalMovementEnought = Math.abs(coordinates.y - touchStartCoordinates.y) > (window.innerHeight / 100) * 5\n\n\tconst direction = touchStartCoordinates.y > coordinates.y ? 'down' : 'up'\n\n\tif (isVerticalMovementEnought) changeSectionOrSlideByDirection(direction)\n}\n\nexport function getEventCoordinated(event: TouchEvent): ICoordinates {\n\treturn {\n\t\tx: event.touches[0].pageX,\n\t\ty: event.touches[0].pageY,\n\t}\n}\n","import { state } from \"../state/state\";\n\nimport { destroyWheelEvent, registerWheelEvent } from \"./wheel.event\";\nimport { destroyKeyboardEvents, registerKeyboardEvents } from \"./keyboard.event\";\nimport { destroyTouchEvents, registerTouchEvents } from \"./touch.event\";\nimport { destroyResizeEvents, registerResizeEvents } from \"./resize.event\";\n\n/**\n * Registers the events for the page scroller.\n */\nexport function registerEvents() {\n    if(state.scrollMode === \"manual\") return;\n\n    state.isWheelEnabled && registerWheelEvent();\n    state.isKeyboardEnabled && registerKeyboardEvents();\n    state.isTouchEnabled && registerTouchEvents();\n\n    registerResizeEvents();\n}\n\n/**\n * Destroys the events for the page scroller.\n */\nexport function destroyEvents() {\n    destroyKeyboardEvents();\n    destroyWheelEvent();\n    destroyTouchEvents();\n    destroyResizeEvents();\n}","import { state } from '../state'\nimport { useLogger } from '../logger'\nimport { reAdjustCurrentSection } from '../common'\n\nconst logger = useLogger()\n\nlet timeout\nlet isResizing = false\n\nexport function registerResizeEvents() {\n\tonResizeHandler()\n\n\twindow.addEventListener('resize', onResizeHandler)\n}\n\nexport function destroyResizeEvents() {\n\tresizeHandler()\n\n\tclearTimeout(timeout)\n\n\twindow.removeEventListener('resize', onResizeHandler)\n}\n\nexport function onResizeHandler() {\n\tlogger.info('Resize event has been triggered.')\n\tif (!isResizing) {\n\t\tresizeHandler()\n\t}\n\n\tisResizing = true\n\n\tclearTimeout(timeout)\n\ttimeout = setTimeout(() => {\n\t\tresizeAction()\n\n\t\tisResizing = false\n\t}, 400)\n}\n\nfunction resizeAction() {\n\tstate.isResizing = true\n\n\tresizeHandler()\n\n\treAdjustCurrentSection()\n}\n\nfunction resizeHandler() {\n\tconst height = window ? window.innerHeight : document.documentElement.offsetHeight\n\n\tsetSectionsSize(height)\n}\n\nfunction setSectionsSize(height: number) {\n\tstate.sections.forEach((section) => {\n\t\tconst getAdjustedHeight = () => {\n\t\t\tif (state.scrollMode === 'automatic') return height\n\n\t\t\tif (!section.slides) return height\n\n\t\t\treturn height * section.slides.elements.length\n\t\t}\n\n\t\tconst adjustedHeight = getAdjustedHeight()\n\n\t\tsection.element.style.height = `${adjustedHeight}px`\n\t})\n}\n","import { callback, state } from '@/state'\nimport { emitter, EmitterEvents } from '@/emitter'\n\nimport type { IPageScrollerOptions, ISectionChangeProps, ISectionBeforeChangeProps } from '@/types'\n\nexport const defaultState: IPageScrollerOptions = {\n\tscrollMode: 'automatic',\n\tscrollingSpeed: 700,\n\ttransitionTimingFunction: 'ease',\n\n\tslidesIdentifyAttribute: 'page-scroller-slide',\n\tisAllowToScrollThroughSlides: false,\n\n\tisDebug: false,\n\tisWheelEnabled: true,\n\tisKeyboardEnabled: true,\n\tisTouchEnabled: true,\n}\n\nexport function initializeState(options: IPageScrollerOptions) {\n\tstate.scrollMode = options.scrollMode ?? defaultState.scrollMode\n\tstate.scrollingSpeed = options.scrollingSpeed ?? defaultState.scrollingSpeed\n\tstate.transitionTimingFunction = options.transitionTimingFunction ?? defaultState.transitionTimingFunction\n\n\tstate.isDebug = options.isDebug ?? defaultState.isDebug\n\tstate.isWheelEnabled = options.isWheelEnabled ?? defaultState.isWheelEnabled\n\tstate.isKeyboardEnabled = options.isKeyboardEnabled ?? defaultState.isKeyboardEnabled\n\tstate.isTouchEnabled = options.isTouchEnabled ?? defaultState.isTouchEnabled\n\n\tstate.slidesIdentifyAttribute = options.slidesIdentifyAttribute ?? defaultState.slidesIdentifyAttribute\n\tstate.isAllowToScrollThroughSlides = options.isAllowToScrollThroughSlides ?? defaultState.isAllowToScrollThroughSlides\n}\n\nexport function destroyState() {\n\tstate.container = null\n\tstate.sections = null\n\n\tstate.activeSlide = 0\n\tstate.activeSection = 0\n\n\tstate.transitionTimingFunction = defaultState.transitionTimingFunction\n\tstate.scrollingSpeed = defaultState.scrollingSpeed\n\n\tstate.slidesIdentifyAttribute = defaultState.slidesIdentifyAttribute\n\tstate.isAllowToScrollThroughSlides = defaultState.isAllowToScrollThroughSlides\n\n\tstate.isDebug = defaultState.isDebug\n\tstate.isScrolling = false\n\tstate.isInitialized = false\n\n\tstate.isWheelEnabled = defaultState.isWheelEnabled\n\tstate.isKeyboardEnabled = defaultState.isKeyboardEnabled\n\tstate.isTouchEnabled = defaultState.isTouchEnabled\n}\n\nexport function initializeCallbacks(options: IPageScrollerOptions) {\n\tif (options.onSectionChange) {\n\t\tcallback.onSectionChange = options.onSectionChange\n\n\t\temitter.on(EmitterEvents.onSectionChange, (event: ISectionChangeProps) => callback.onSectionChange(event))\n\t}\n\n\tif (options.onBeforeSectionChange) {\n\t\tcallback.onBeforeSectionChange = options.onBeforeSectionChange\n\n\t\temitter.on(EmitterEvents.onBeforeSectionChange, (event: ISectionBeforeChangeProps) =>\n\t\t\tcallback.onBeforeSectionChange(event)\n\t\t)\n\t}\n}\n\nexport function destroyCallbacks() {\n\tcallback.onSectionChange = () => {}\n\temitter.off(EmitterEvents.onSectionChange)\n\tcallback.onBeforeSectionChange = () => {}\n\temitter.off(EmitterEvents.onBeforeSectionChange)\n}\n","import { state } from '../state'\n\nimport { registerEmitterEvents, destroyEmitterEvents } from '../emitter'\n\nimport { useLogger } from '../logger'\nimport { initializeDOM, destroyDOM } from './dom'\nimport { destroyEvents, registerEvents } from '../events'\nimport { initializeCallbacks, initializeState, destroyState, destroyCallbacks } from './state'\n\nimport type { IPageScrollerOptions } from '@/types'\n\nconst logger = useLogger()\n\nexport function onInitialize(options?: IPageScrollerOptions) {\n\tlogger.info('Initializing Page Scroller...')\n\n\tif (options) {\n\t\tinitializeState(options)\n\t\tinitializeCallbacks(options)\n\t}\n\n\tinitializeDOM()\n\tregisterEvents()\n\tregisterEmitterEvents()\n\n\tstate.isInitialized = true\n\tlogger.info('Initialized Page Scroller.')\n}\n\nexport function onDestroy() {\n\tlogger.warn('Destroying Page Scroller...')\n\n\tdestroyDOM()\n\tdestroyEvents()\n\tdestroyEmitterEvents()\n\tdestroyState()\n\tdestroyCallbacks()\n\n\tstate.isInitialized = false\n\n\tlogger.warn('Destroyed Page Scroller.')\n}\n","import { state } from '../state'\nimport { onResizeHandler } from '@/events/resize.event'\nimport { ClassName, SlideClassName } from '../utils/class.enum'\n\nexport function initializeDOM() {\n\tconst htmlElement = document.querySelector('html')\n\thtmlElement.classList.add(ClassName.html)\n\n\tconst bodyElement = document.querySelector('body')\n\tbodyElement.classList.add(ClassName.body)\n\n\tstate.container.classList.add(ClassName.container)\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\tstate.container.style.transition = transition\n\n\tprepareSections()\n\n\tstate.scrollMode === 'automatic' ? prepareScrollModeAutomaticDOM() : prepareScrollModeManualDOM()\n}\n\nfunction prepareSections() {\n\tstate.sections = Array.from(state.container.children).map((element) => {\n\t\tconst section = element as HTMLElement\n\n\t\tconst childrens = Array.from(section.children) as HTMLElement[]\n\n\t\tconst foundSlides = childrens.filter((slide) => slide.hasAttribute(state.slidesIdentifyAttribute))\n\t\tfoundSlides.forEach((slide) => slide.classList.add(ClassName.slide))\n\n\t\tif (!foundSlides.length) return { element: section, slides: null }\n\n\t\tconst container = preapreSectionForSlides(section, foundSlides)\n\n\t\tconst slides = { container, elements: foundSlides }\n\n\t\treturn { element: section, slides }\n\t})\n\n\tstate.sections.forEach((section) => section.element.classList.add(ClassName.section))\n}\n\nfunction preapreSectionForSlides(section: HTMLElement, slides: HTMLElement[]): HTMLElement {\n\tconst wrapperElement = document.createElement('div')\n\twrapperElement.classList.add(SlideClassName.wrapper)\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\twrapperElement.style.transition = transition\n\twrapperElement.style.width = `${slides.length * 100}%`\n\n\tslides.forEach((slide) => {\n\t\tslide.style.width = `${100 / slides.length}%`\n\n\t\twrapperElement.appendChild(slide)\n\t})\n\n\tconst containerElement = document.createElement('div')\n\tcontainerElement.classList.add(ClassName.sectionWithSlides)\n\n\tcontainerElement.appendChild(wrapperElement)\n\n\tsection.appendChild(containerElement)\n\n\treturn wrapperElement\n}\n\nexport function destroyDOM() {\n\tconst htmlElement = document.querySelector('html')\n\thtmlElement.classList.remove(ClassName.html)\n\n\tconst bodyElement = document.querySelector('body')\n\tbodyElement.classList.remove(ClassName.body)\n\n\tstate.container.classList.remove(ClassName.container)\n\n\tstate.container.style.transition = ''\n\tstate.container.style.transform = 'none'\n\tstate.container.style.webkitTransform = 'none'\n\n\tstate.sections.forEach((section) => section.element.classList.remove(ClassName.section))\n}\n\nexport function prepareScrollModeAutomaticDOM() {\n\tconst bodyElement = document.querySelector('body')\n\n\tbodyElement.style.overflow = 'hidden'\n\tbodyElement.style.height = '100%'\n\n\tconst htmlElement = document.querySelector('html')\n\n\thtmlElement.style.overflow = 'hidden'\n\thtmlElement.style.height = '100%'\n\n\tconst transition = `transform ${state.scrollingSpeed}ms ${state.transitionTimingFunction}`\n\tstate.container.style.transition = transition\n}\n\nexport function prepareScrollModeManualDOM() {\n\tconst bodyElement = document.querySelector('body')\n\n\tbodyElement.style.overflow = 'auto'\n\tbodyElement.style.height = 'initial'\n\n\tconst htmlElement = document.querySelector('html')\n\n\thtmlElement.style.overflow = 'auto'\n\thtmlElement.style.height = 'initial'\n\n\tstate.container.style.transition = ''\n\tstate.container.style.transform = 'none'\n\tstate.container.style.webkitTransform = 'none'\n}\n\nexport function prepareScrollModeAutomaticDOMForSlides() {\n\tstate.sections.forEach((section) => {\n\t\tif (!section.slides) return\n\n\t\tsection.slides.container.classList.remove(SlideClassName.wrapperDestroyed)\n\t\tsection.slides.container.style.width = `${section.slides.elements.length * 100}%`\n\n\t\tstate.activeSlide = 0\n\n\t\tonResizeHandler()\n\n\t\tsection.slides.elements.forEach((element) => {\n\t\t\telement.style.width = `${100 / section.slides.elements.length}%`\n\t\t\telement.style.height = null\n\t\t})\n\t})\n}\n\nexport function prepareScrollModeManualDOMForSlides() {\n\tstate.sections.forEach((section) => {\n\t\tif (!section.slides) return\n\n\t\tsection.slides.container.classList.add(SlideClassName.wrapperDestroyed)\n\t\tsection.slides.container.style.width = '100%'\n\t\tsection.slides.container.style.transform = 'none'\n\n\t\tsection.slides.elements.forEach((element) => {\n\t\t\telement.style.width = '100%'\n\t\t\telement.style.height = '100%'\n\t\t})\n\t})\n}\n","import {\n\tprepareScrollModeAutomaticDOM,\n\tprepareScrollModeManualDOM,\n\tprepareScrollModeManualDOMForSlides,\n\tprepareScrollModeAutomaticDOMForSlides,\n} from '../common/dom'\nimport { destroyEvents, registerEvents } from '../events'\n\nimport { emitter, EmitterEvents } from './emitter'\n\nexport function registerEmitterEvents() {\n\temitter.on(EmitterEvents.onPageScrollModeAutomatic, () => {\n\t\tprepareScrollModeAutomaticDOM()\n\t\tprepareScrollModeAutomaticDOMForSlides()\n\t\tregisterEvents()\n\t})\n\n\temitter.on(EmitterEvents.onPageScrollModeManual, () => {\n\t\tprepareScrollModeManualDOM()\n\t\tprepareScrollModeManualDOMForSlides()\n\t\tdestroyEvents()\n\t})\n}\n\nexport function destroyEmitterEvents() {\n\temitter.off(EmitterEvents.onPageScrollModeManual)\n\temitter.off(EmitterEvents.onPageScrollModeAutomatic)\n}\n","import type {\n\tIEmitter,\n\tIEventHandlerMap,\n\tTEmitterEventType,\n\tTEmitterEventHandler,\n\tTEmitterEventWildcardHandler,\n\tTEmitterHandlerList,\n\tTEmitterWildcardHandlerList,\n} from '@/types/emitter'\n\nexport enum EmitterEvents {\n\tonSectionChange = 'onSectionChange',\n\tonBeforeSectionChange = 'onBeforeSectionChange',\n\n\tonSlideChange = 'onSlideChange',\n\tonBeforeSlideChange = 'onBeforeSlideChange',\n\n\tonPageScrollStatusChanged = 'onPageScrollStatusChanged',\n\tonPageScrollModeAutomatic = 'onPageScrollModeAutomatic',\n\tonPageScrollModeManual = 'onPageScrollModeManual',\n}\n\nfunction mitt<Events extends Record<TEmitterEventType, unknown>>(all?: IEventHandlerMap<Events>): IEmitter<Events> {\n\ttype GenericEventHandler = TEmitterEventHandler<Events[keyof Events]> | TEmitterEventWildcardHandler<Events>\n\tall = all || new Map()\n\n\treturn {\n\t\tall,\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler)\n\t\t\t} else {\n\t\t\t\tall!.set(type, [handler] as TEmitterHandlerList<Events[keyof Events]>)\n\t\t\t}\n\t\t},\n\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1)\n\t\t\t\t} else {\n\t\t\t\t\tall!.set(type, [])\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type)\n\t\t\tif (handlers) {\n\t\t\t\t;(handlers as TEmitterHandlerList<Events[keyof Events]>).slice().map((handler) => {\n\t\t\t\t\thandler(evt!)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\thandlers = all!.get('*')\n\t\t\tif (handlers) {\n\t\t\t\t;(handlers as TEmitterWildcardHandlerList<Events>).slice().map((handler) => {\n\t\t\t\t\thandler(type, evt!)\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t}\n}\n\nexport const emitter = mitt()\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { useLogger } from './logger'\nimport { state } from './state/state'\nimport { changeSectionBySpecificIndex, changeSectionByDirection, onInitialize } from './common'\n\nimport type { IPageScrollerOptions, IPageScrollerReturn } from '@/types'\n\nimport './index.css'\n\nconst logger = useLogger()\n\nexport function usePageScroller(options?: IPageScrollerOptions): IPageScrollerReturn {\n\tfunction initPageScroller(selector: string) {\n\t\tlogger.info('Initializing page scroller...')\n\n\t\tif (state.isInitialized) throw new Error(logger.createMessage('Page scroller is already initialized.'))\n\n\t\tif (selector === undefined) throw new Error(logger.createMessage('Please provide a valid selector.'))\n\n\t\tstate.container = document.querySelector(selector)\n\n\t\tif (!state.container) throw new Error(logger.createMessage('Container not found. Please provide a valid selector.'))\n\n\t\tonInitialize(options)\n\t}\n\n\treturn { initPageScroller, changeSectionByDirection, changeSectionBySpecificIndex }\n}\n","import { state } from '@/state'\nimport { emitter, EmitterEvents } from '@/emitter'\n\nexport {\n\tonDestroy,\n\tchangeSectionOrSlideByDirection,\n\tchangeSectionByDirection,\n\tchangeSectionBySpecificIndex,\n\tchangeSlideByDirection,\n} from '@/common'\n\nimport type { TScrollingMode } from '@/types/scroll'\n\nexport const isManualScrollingMode = (): boolean => state.scrollMode === 'manual'\nexport const isAutomaticScrollingMode = (): boolean => state.scrollMode === 'automatic'\n\nexport function changeScrollingMode(mode: TScrollingMode) {\n\tif (state.scrollMode === mode) return\n\n\tstate.scrollMode = mode\n\n\temitter.emit(mode === 'automatic' ? EmitterEvents.onPageScrollModeAutomatic : EmitterEvents.onPageScrollModeManual)\n}\n\nexport const getActiveSection = (): number => state.activeSection\n"],"names":["state","container","sections","activeSlide","activeSection","scrollMode","scrollingSpeed","transitionTimingFunction","isDebug","isScrolling","isResizing","isInitialized","isWheelEnabled","isKeyboardEnabled","isTouchEnabled","slidesIdentifyAttribute","isAllowToScrollThroughSlides","callback","onSectionChange","onBeforeSectionChange","useLogger","info","message","error","warn","createMessage","type","toUpperCase","ClassName","SlideClassName","changeSectionOrSlideByDirection","direction","slides","elements","length","isEdgeSlide","isAllowToChangeSlide","changeSectionByDirection","changeSlideByDirection","currentSlideIndex","previousIndex","nextIndex","emitter","emit","EmitterEvents","onBeforeSlideChange","beforeIndex","afterIndex","classList","remove","active","transform","offsetLeft","style","webkitTransform","add","setTimeout","onSlideChange","changeSlide","currentSectionIndex","isAllowToChangeSection","changeSection","changeSectionBySpecificIndex","index","isAllowToChangeByIndex","element","offsetTop","getAverageFromArray","array","number","sum","slice","Math","max","reduce","acc","curr","ceil","scrollingTimeout","scrollings","logger","wheelEventHandler","event","clearTimeout","scrollValue","deltaY","detail","value","min","shift","push","abs","avarageFromEnd","avarageFromMid","checkIsAccelerating","focusElementCollation","keyDownEventHandler","key","activeElement","document","includes","tagName","toLowerCase","isUserUsingInput","isShiftPressed","shiftKey","focusableElements","getFocusableElements","isFirstFocusableInSection","isLastFocusableInSection","preventDefault","onTabPress","onSectionChangeHandler","focus","parent","call","querySelectorAll","filter","getAttribute","offsetParent","touchStartCoordinates","onTouchStartHandler","coordinates","getEventCoordinated","x","y","onTouchMoveHandler","isVerticalMovementEnought","window","innerHeight","touches","pageX","pageY","registerEvents","body","addEventListener","on","passive","onResizeHandler","destroyEvents","removeEventListener","off","resizeHandler","timeout","defaultState","onInitialize","options","initializeState","initializeCallbacks","querySelector","html","transition","Array","from","children","map","section","foundSlides","slide","hasAttribute","forEach","wrapperElement","createElement","wrapper","width","appendChild","containerElement","sectionWithSlides","preapreSectionForSlides","prepareScrollModeAutomaticDOM","prepareScrollModeManualDOM","initializeDOM","onPageScrollModeAutomatic","wrapperDestroyed","height","onPageScrollModeManual","reAdjustCurrentSection","adjustedHeight","getAdjustedHeight","setSectionsSize","documentElement","offsetHeight","bodyElement","overflow","htmlElement","all","Map","handler","handlers","get","set","splice","indexOf","evt","css","ref","insertAt","head","getElementsByTagName","firstChild","insertBefore","styleSheet","cssText","createTextNode","mode","destroyDOM","initPageScroller","selector","Error","undefined"],"mappings":"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"}